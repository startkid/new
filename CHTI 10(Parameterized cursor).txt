CHTI 10(Parameterized cursor)

CREATE TABLE N_RollCall ( 
roll_number NUMBER(10), 
name VARCHAR2(10) 
); 
CREATE TABLE O_RollCall ( 
roll_number NUMBER(10), 
name VARCHAR2(10) 
); 
INSERT INTO N_RollCall VALUES (101, 'Alice'); 
INSERT INTO N_RollCall VALUES (102, 'Bob'); 
INSERT INTO N_RollCall VALUES (103, 'Charlie'); 
INSERT INTO N_RollCall VALUES (104, 'Daisy'); 
INSERT INTO N_RollCall VALUES (105, 'Eve'); 
INSERT INTO O_RollCall VALUES (201, 'John'); 
INSERT INTO O_RollCall VALUES (202, 'Emily'); 
INSERT INTO O_RollCall VALUES (101, 'Alice');  
select * from N_RollCall; 
select * from O_RollCall; 
DECLARE -- Parameterized cursor to check if a student already exists in O_RollCall 
CURSOR cur_check_exists(p_name VARCHAR2) IS 
SELECT roll_number 
FROM O_RollCall 
WHERE name = p_name; -- Cursor to loop through all records in N_RollCall 
CURSOR cur_n_rollcall IS 
SELECT roll_number, name 
FROM N_RollCall; 
v_roll_number N_RollCall.roll_number%TYPE; 
v_name N_RollCall.name%TYPE; 
v_existing_roll O_RollCall.roll_number%TYPE; 
BEGIN -- Open the cursor for N_RollCall table to begin processing each row 
OPEN cur_n_rollcall; 
LOOP -- Fetch the current row from N_RollCall 
FETCH cur_n_rollcall INTO v_roll_number, v_name; -- Exit the loop if there are no more rows 
EXIT WHEN cur_n_rollcall%NOTFOUND; -- Open the check cursor to see if this record exists in O_RollCall 
OPEN cur_check_exists(v_name); 
FETCH cur_check_exists INTO v_existing_roll; 
IF cur_check_exists%FOUND THEN -- Record already exists, so skip it 
DBMS_OUTPUT.PUT_LINE('Record for ' || v_name || ' already exists in O_RollCall.'); 
ELSE -- Record does not exist, insert it into O_RollCall 
INSERT INTO O_RollCall (roll_number, name) VALUES (v_roll_number, v_name); 
DBMS_OUTPUT.PUT_LINE('Inserted record for ' || v_name || ' into O_RollCall.'); 
END IF; -- Close the check cursor 
CLOSE cur_check_exists; 
END LOOP; -- Close the main cursor 
CLOSE cur_n_rollcall; 
DBMS_OUTPUT.PUT_LINE('Data merge process completed.'); 
END; 
/ 